@model PrivateLMS.ViewModels.BookViewModel
@{
    ViewData["Title"] = "Book Details";
}

<style>
    .details-container {
        max-width: 600px;
        margin: 0 auto;
        text-align: center;
    }

        .details-container img {
            display: block;
            margin: 0 auto;
        }

        .details-container dl {
            margin: 0 auto;
        }

        .details-container dt, .details-container dd {
            display: inline-block;
            width: 48%;
            margin: 5px 0;
        }

        .details-container dt {
            font-weight: bold;
            text-align: right;
        }

        .details-container dd {
            text-align: left;
        }

        .details-container .btn {
            margin: 5px;
        }
</style>

<div class="details-container">
    <h2>Book Details</h2>

    @if (!string.IsNullOrEmpty(Model.CoverImagePath))
    {
        <img src="@Model.CoverImagePath" alt="@Model.Title Cover" style="max-width: 300px; margin-bottom: 20px;" />
    }
    else
    {
        <p>No Cover Image</p>
    }

    <dl>
        <dt>Title</dt>
        <dd>@Model.Title</dd>
        <dt>Author</dt>
        <dd>
            @if (User.Identity.IsAuthenticated)
            {
                var author = Model.AvailableAuthors.FirstOrDefault(a => a.AuthorId == Model.AuthorId);
                if (author != null)
                {
                    <a asp-controller="Authors" asp-action="Details" asp-route-id="@Model.AuthorId">@author.Name</a>
                }
                else
                {
                    <span>Unknown</span>
                }
            }
            else
            {
                @(Model.AvailableAuthors.FirstOrDefault(a => a.AuthorId == Model.AuthorId)?.Name ?? "Unknown")
            }
        </dd>
        <dt>Description</dt>
        <dd>@(Model.Description ?? "No description available")</dd>
        <dt>ISBN</dt>
        <dd>@Model.ISBN</dd>
        <dt>Language</dt>
        <dd>@Model.Language</dd>
        <dt>Published Date</dt>
        <dd>@Model.PublishedDate.ToShortDateString()</dd>
        <dt>Available Copies</dt>
        <dd>@Model.AvailableCopies</dd>
        <dt>Available</dt>
        <dd>@(Model.IsAvailable ? "Yes" : "No")</dd>
        <dt>Publisher</dt>
        <dd>
            @if (User.Identity.IsAuthenticated && Model.PublisherId.HasValue)
            {
                var publisher = Model.AvailablePublishers.FirstOrDefault(p => p.PublisherId == Model.PublisherId);
                if (publisher != null)
                {
                    <a asp-controller="Publishers" asp-action="Details" asp-route-id="@Model.PublisherId">@publisher.PublisherName</a>
                }
                else
                {
                    <span>None</span>
                }
            }
            else
            {
                @(Model.AvailablePublishers.FirstOrDefault(p => p.PublisherId == Model.PublisherId)?.PublisherName ?? "None")
            }
        </dd>
        <dt>Categories</dt>
        <dd>
            @if (Model.AvailableCategories.Any())
            {
                <ul class="list-unstyled">
                    @foreach (var category in Model.AvailableCategories)
                    {
                        <li>@category.CategoryName</li>
                    }
                </ul>
            }
            else
            {
                <span>No Categories</span>
            }
        </dd>
    </dl>

    <div>
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="Edit" asp-route-id="@Model.BookId" class="btn btn-warning">Edit</a>
        }
        @if (Model.IsAvailable && Model.AvailableCopies > 0 && User.Identity.IsAuthenticated)
        {
            <a asp-action="Loan" asp-route-id="@Model.BookId" class="btn btn-primary">Loan</a>
        }
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>