@model PrivateLMS.Models.PagedResultViewModel<PrivateLMS.ViewModels.BookViewModel>
@{
    ViewData["Title"] = "Books";
    var authors = ViewBag.Authors as IEnumerable<PrivateLMS.Models.Author>;
    var categories = ViewBag.Categories as IEnumerable<PrivateLMS.Models.Category>;
    var searchTerm = ViewBag.SearchTerm as string;
    var categoryId = ViewBag.CategoryId as int?;
    var authorId = ViewBag.AuthorId as int?;
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Books</h2>

    <!-- Search and Filter Form -->
    <form asp-action="Index" method="get" class="row g-3 justify-content-center mb-4">
        <div class="col-md-4">
            <input type="text" name="searchTerm" class="form-control" placeholder="Search by title or description..." value="@searchTerm" />
        </div>
        <div class="col-md-3">
            <select name="categoryId" class="form-select">
                <option value="">All Categories</option>
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId" selected="@(categoryId == category.CategoryId)">
                        @category.CategoryName
                    </option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select name="authorId" class="form-select">
                <option value="">All Authors</option>
                @foreach (var author in authors)
                {
                    <option value="@author.AuthorId" selected="@(authorId == author.AuthorId)">
                        @author.Name
                    </option>
                }
            </select>
        </div>
        <div class="col-md-2 d-grid">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </form>

    @if (User.IsInRole("Admin"))
    {
        <div class="text-center mb-4">
            <a asp-action="Create" class="btn btn-success">Add New Book</a>
        </div>
    }

    @if (!Model.Items.Any())
    {
        <p class="text-center text-muted">No books found matching your criteria.</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var book in Model.Items)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        @if (!string.IsNullOrEmpty(book.CoverImagePath))
                        {
                            <img src="@book.CoverImagePath" alt="@book.Title Cover" class="card-img-top" style="height: 250px; object-fit: cover;" />
                        }
                        else
                        {
                            <div class="card-img-top bg-secondary text-white d-flex align-items-center justify-content-center" style="height: 250px;">
                                <span>No Cover</span>
                            </div>
                        }

                        <div class="card-body text-start">
                            <h5 class="card-title text-center">@book.Title</h5>
                            <p class="card-text small">
                                @if (!string.IsNullOrEmpty(book.Description))
                                {
                                    <span class="text-muted d-block mb-1">
                                        @(book.Description.Length > 70 ? book.Description.Substring(0, 70) + "..." : book.Description)
                                    </span>
                                }

                                <strong>Author:</strong> @(authors.FirstOrDefault(a => a.AuthorId == book.AuthorId)?.Name ?? "Unknown")<br />
                                <strong>Copies:</strong> @book.AvailableCopies<br />
                                <strong>Status:</strong>
                                @if (book.IsAvailable)
                                {
                                    <span class="badge bg-success">Available</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Not Available</span>
                                }
                                <br />
                                <strong>Rating:</strong>
                                <span class="text-muted">
                                    @(book.RatingCount > 0 ? $"{book.AverageRating:F1} ({book.RatingCount} rating{(book.RatingCount == 1 ? "" : "s")})" : "Not yet rated")
                                </span>
                            </p>
                        </div>

                        <div class="card-footer text-center">
                            <a asp-action="Details" asp-route-id="@book.BookId" class="btn btn-outline-primary btn-sm me-2">View</a>
                            @if (book.IsAvailable && book.AvailableCopies > 0 && User.IsInRole("User"))
                            {
                                <a asp-action="Loan" asp-route-id="@book.BookId" class="btn btn-primary btn-sm">Loan</a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination Controls -->
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@searchTerm" asp-route-categoryId="@categoryId" asp-route-authorId="@authorId">Previous</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Previous</span>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@searchTerm" asp-route-categoryId="@categoryId" asp-route-authorId="@authorId">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@searchTerm" asp-route-categoryId="@categoryId" asp-route-authorId="@authorId">Next</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Next</span>
                    </li>
                }
            </ul>
        </nav>
    }
</div>