@model IEnumerable<PrivateLMS.ViewModels.BookViewModel>
@{
    ViewData["Title"] = "Books";
    var authors = ViewBag.Authors as IEnumerable<PrivateLMS.Models.Author>;
    var categories = ViewBag.Categories as IEnumerable<PrivateLMS.Models.Category>;
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Books</h2>

    <!-- Search and Filter Form -->
    <div class="mb-4">
        <form asp-action="Index" method="get" class="row g-3 justify-content-center">
            <div class="col-md-4">
                <input type="text" name="searchTerm" class="form-control" placeholder="Search by title or description..." value="@ViewBag.SearchTerm" />
            </div>
            <div class="col-md-3">
                <select name="categoryId" class="form-control">
                    <option value="">All Categories</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.CategoryId" selected="@(ViewBag.CategoryId == category.CategoryId)">@category.CategoryName</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <select name="authorId" class="form-control">
                    <option value="">All Authors</option>
                    @foreach (var author in authors)
                    {
                        <option value="@author.AuthorId" selected="@(ViewBag.AuthorId == author.AuthorId)">@author.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">Filter</button>
            </div>
        </form>
    </div>

    @if (User.IsInRole("Admin"))
    {
        <div class="text-center mb-4">
            <a asp-action="Create" class="btn btn-primary">Add a New Book</a>
        </div>
    }

    @if (!Model.Any())
    {
        <p class="text-center text-muted">No books found matching your criteria.</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var book in Model)
            {
                <div class="col">
                    <div class="card h-100 text-center">
                        @if (!string.IsNullOrEmpty(book.CoverImagePath))
                        {
                            <img src="@book.CoverImagePath" class="card-img-top mx-auto d-block" alt="@book.Title Cover" />
                        }
                        else
                        {
                            <div class="card-img-top bg-secondary text-white d-flex align-items-center justify-content-center">
                                <span>No Cover</span>
                            </div>
                        }
                        <div class="card-body">
                            <h5 class="card-title">@book.Title</h5>
                            <p class="card-text">
                                @if (!string.IsNullOrEmpty(book.Description))
                                {
                                    <small class="text-muted">@(book.Description.Length > 50 ? book.Description.Substring(0, 50) + "..." : book.Description)</small>
                                }
                                <br />
                                <span>Author: @(authors.FirstOrDefault(a => a.AuthorId == book.AuthorId)?.Name ?? "Unknown")</span>
                                <br />
                                <span>Copies: @book.AvailableCopies</span>
                                <br />
                                @if (book.IsAvailable)
                                {
                                    <span class="badge bg-success">Available</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Not Available</span>
                                }
                                <br />
                                <small class="text-muted">Rating: @(book.RatingCount > 0 ? $"{book.AverageRating:F1} ({book.RatingCount} ratings)" : "Not yet rated")</small>
                            </p>
                        </div>
                        <div class="card-footer">
                            <a asp-action="Details" asp-route-id="@book.BookId" class="btn btn-primary btn-sm me-2">View Details</a>
                            @if (book.IsAvailable && book.AvailableCopies > 0 && User.Identity.IsAuthenticated)
                            {
                                <a asp-action="Loan" asp-route-id="@book.BookId" class="btn btn-primary btn-sm">Loan</a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>