@model IEnumerable<PrivateLMS.ViewModels.FineViewModel>
@{
    ViewData["Title"] = "My Fines";
}

<h2 class="text-center mb-4">My Fines</h2>

@if (!Model.Any())
{
    <p class="text-center">You have no outstanding fines.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Book Title</th>
                <th>Loan Date</th>
                <th>Due Date</th>
                <th>Return Date</th>
                <th>Fine Amount</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var fine in Model)
            {
                <tr>
                    <td>@fine.BookTitle</td>
                    <td>@fine.LoanDate.ToShortDateString()</td>
                    <td>
                        @(fine.DueDate?.ToShortDateString() ?? "N/A")
                        @if (fine.DueDate.HasValue && fine.DueDate < DateTime.Now && !fine.ReturnDate.HasValue)
                        {
                            <span class="badge bg-danger ms-2">Overdue</span>
                        }
                    </td>
                    <td>@(fine.ReturnDate?.ToShortDateString() ?? "Not Returned")</td>
                    <td>@fine.FineAmount.ToString("C", new System.Globalization.CultureInfo("en-NG"))</td>
                    <td>@(fine.IsFinePaid ? "Paid" : "Unpaid")</td>
                    <td>
                        @if (!fine.IsFinePaid)
                        {
                            <a asp-action="Pay" asp-route-id="@fine.LoanRecordId" class="btn btn-primary btn-sm">Pay</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="text-end">
    <a asp-controller="Loans" asp-action="MyLoans" class="btn btn-secondary">Back to My Loans</a>
</div>